{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Roma: GV-race detector on mobile apps Roma is a framework to automatically detect the GV-race on android apps. Roma extracts the GUI and VUI related call graph through static program analysis, and generates a GV interaction graph using our pre-defined highly abstract primitives to represent the GUI and VUI behavior of the app. It introduces happen-before constraints to formally specify the freeness of GV-race with respect to the GV interaction graph, so that the property can be reduced to constraint solving with off-the-shelf SMT solvers. Files Tree \u251c\u2500\u2500 README.md \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 Main.java \u2502 \u251c\u2500\u2500 callGraphAnalyze \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u251c\u2500\u2500 modelConstruct \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 Solver \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 AndroidCallbacks.txt \u2502 \u2514\u2500\u2500 SourcesAndSinks.txt \u251c\u2500\u2500 libs \u2502 \u2514\u2500\u2500 dependencies for Roma \u2514\u2500\u2500 VUIConflict.jar src: contains the source code of Roma libs: contains the dependencies of Roma config: configuration files required by FlowDroid. Here, SourcesAndSinks.txt define the functions of GUI & VUI sinks mentioned in the paper. VUIConflict.jar: the executable jar package of Roma Requirements Java 8 Android SDKs Microsoft z3 How to run Roma java -jar VUIConflict.jar -a <path to the Apk file> -p <path to the Android platform directory> -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o <path to the output directory> for example: java -jar VUIConflict.jar -a /home/xxx/Documents/dataset/com.voicenotebook.voicenotebook.apk -p /home/xxx/Android/Sdk/platforms -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o /home/xxx/Documents/output/ Result apksWithRace(step1).txt: file names of apps with GV co-access apksWithRace(step2).txt: file names of apps with GV-race tested.txt: file names of apps under tests time.txt: file names and analysis time of apps that terminate in 30 minutes Case Study See the detailed information here . Download Roma See the Roma directory for running Roma. Dataset The 215 apks' app ids are listed here. The mutated third-party apps are also provided. Output Roma's analysis results of 215 apps are saved here. Validation Some of the validation videos can be found here and here .","title":"Home"},{"location":"#roma-gv-race-detector-on-mobile-apps","text":"Roma is a framework to automatically detect the GV-race on android apps. Roma extracts the GUI and VUI related call graph through static program analysis, and generates a GV interaction graph using our pre-defined highly abstract primitives to represent the GUI and VUI behavior of the app. It introduces happen-before constraints to formally specify the freeness of GV-race with respect to the GV interaction graph, so that the property can be reduced to constraint solving with off-the-shelf SMT solvers.","title":"Roma: GV-race detector on mobile apps"},{"location":"#files-tree","text":"\u251c\u2500\u2500 README.md \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 Main.java \u2502 \u251c\u2500\u2500 callGraphAnalyze \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u251c\u2500\u2500 modelConstruct \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 Solver \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 AndroidCallbacks.txt \u2502 \u2514\u2500\u2500 SourcesAndSinks.txt \u251c\u2500\u2500 libs \u2502 \u2514\u2500\u2500 dependencies for Roma \u2514\u2500\u2500 VUIConflict.jar src: contains the source code of Roma libs: contains the dependencies of Roma config: configuration files required by FlowDroid. Here, SourcesAndSinks.txt define the functions of GUI & VUI sinks mentioned in the paper. VUIConflict.jar: the executable jar package of Roma","title":"Files Tree"},{"location":"#requirements","text":"Java 8 Android SDKs Microsoft z3","title":"Requirements"},{"location":"#how-to-run-roma","text":"java -jar VUIConflict.jar -a <path to the Apk file> -p <path to the Android platform directory> -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o <path to the output directory> for example: java -jar VUIConflict.jar -a /home/xxx/Documents/dataset/com.voicenotebook.voicenotebook.apk -p /home/xxx/Android/Sdk/platforms -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o /home/xxx/Documents/output/","title":"How to run Roma"},{"location":"#result","text":"apksWithRace(step1).txt: file names of apps with GV co-access apksWithRace(step2).txt: file names of apps with GV-race tested.txt: file names of apps under tests time.txt: file names and analysis time of apps that terminate in 30 minutes","title":"Result"},{"location":"#case-study","text":"See the detailed information here .","title":"Case Study"},{"location":"#download","text":"Roma See the Roma directory for running Roma. Dataset The 215 apks' app ids are listed here. The mutated third-party apps are also provided. Output Roma's analysis results of 215 apps are saved here. Validation Some of the validation videos can be found here and here .","title":"Download"},{"location":"case/","text":"Case Study Some typical apps from the dataset are selected for the case study. Case 1 The first figure shows the interface of our motivating example \"com.voicenotebook.voicenotebook\" app. If we click the green microphone button on the left in the second picture, the VUI starts. Then we say \"hello word\" to the app. After that, as the third figure shows, we click the \",\" button. Immediately, the \",\" text shows on the text box. Then the ASR process returns and \"hello word\" is appended to the text box as the fourth figure shows. Finally, the text box shows \",hello word\" instead of \"hello word,\". This app serves as a notebook that can take both GUI and VUI notes, but the GV-race makes the notes incorrect. Case 2 \u200bThe below four figures show the interafaces of the \"an.BurmeseTranslate\" app. If we click the microphone button on the top right in the first figure, the VUI starts. Then, we say \"hello\" to the app, place the cursor at the beginning of the text box, and tap \"g\" on the keyboard. The \"g\" text shows immediately on the text box as the second figure shows. In the third figure, a dialog starts to process the VUI input. In the end, the ASR results returns and \"hello\" is displayed on the text box. This app is a translation app. The incorrect inputs to the app can lead to wrong translation results.","title":"Case Study"},{"location":"case/#case-study","text":"Some typical apps from the dataset are selected for the case study.","title":"Case Study"},{"location":"case/#case-1","text":"The first figure shows the interface of our motivating example \"com.voicenotebook.voicenotebook\" app. If we click the green microphone button on the left in the second picture, the VUI starts. Then we say \"hello word\" to the app. After that, as the third figure shows, we click the \",\" button. Immediately, the \",\" text shows on the text box. Then the ASR process returns and \"hello word\" is appended to the text box as the fourth figure shows. Finally, the text box shows \",hello word\" instead of \"hello word,\". This app serves as a notebook that can take both GUI and VUI notes, but the GV-race makes the notes incorrect.","title":"Case 1"},{"location":"case/#case-2","text":"\u200bThe below four figures show the interafaces of the \"an.BurmeseTranslate\" app. If we click the microphone button on the top right in the first figure, the VUI starts. Then, we say \"hello\" to the app, place the cursor at the beginning of the text box, and tap \"g\" on the keyboard. The \"g\" text shows immediately on the text box as the second figure shows. In the third figure, a dialog starts to process the VUI input. In the end, the ASR results returns and \"hello\" is displayed on the text box. This app is a translation app. The incorrect inputs to the app can lead to wrong translation results.","title":"Case 2"},{"location":"validation/","text":"Validation We put two videos recorded during the validation to show how our validation method works. Other videos can be found here and here . Case 1 This example shows an app with the VUI implemented by the variant version of Google VUI SDK. In this example, the script clicks the microphone button to invoke the VUI and then immediately enters \"G\" to the text box. We can see that the text box shows \"G\", then the VUI-related dialog is opened. A one or two seconds after we speak to the VUI, the VUI results returned. The VUI is invoked before GUI, but the responses return after that of GUI. Case 2 This example shows an app with the VUI implemented by the Google VUI SDK. In this example, the script clicks the microphone button to invoke the VUI and the user says \"hello\" to the VUI. After that, the script clicks the ``,'' button and the text box shows \",\" immediately. A one or two seconds after we speak to the VUI, the VUI results returned. The final result is \",hello\" instead of \"hello,\".","title":"Validation"},{"location":"validation/#validation","text":"We put two videos recorded during the validation to show how our validation method works. Other videos can be found here and here .","title":"Validation"},{"location":"validation/#case-1","text":"This example shows an app with the VUI implemented by the variant version of Google VUI SDK. In this example, the script clicks the microphone button to invoke the VUI and then immediately enters \"G\" to the text box. We can see that the text box shows \"G\", then the VUI-related dialog is opened. A one or two seconds after we speak to the VUI, the VUI results returned. The VUI is invoked before GUI, but the responses return after that of GUI.","title":"Case 1"},{"location":"validation/#case-2","text":"This example shows an app with the VUI implemented by the Google VUI SDK. In this example, the script clicks the microphone button to invoke the VUI and the user says \"hello\" to the VUI. After that, the script clicks the ``,'' button and the text box shows \",\" immediately. A one or two seconds after we speak to the VUI, the VUI results returned. The final result is \",hello\" instead of \"hello,\".","title":"Case 2"}]}