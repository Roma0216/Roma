{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Roma: GV-race detector on mobile apps Roma is a framework to automatically detect the GV-race on android apps. Roma extracts the GUI and VUI related call graph through static program analysis, and generates a GV interaction graph using our pre-defined highly abstract primitives to represent the GUI and VUI behavior of the app. It introduces happen-before constraints to formally specify the freeness of GV-race with respect to the GV interaction graph, so that the property can be reduced to constraint solving with off-the-shelf SMT solvers. Files Tree \u251c\u2500\u2500 README.md \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 Main.java \u2502 \u251c\u2500\u2500 callGraphAnalyze \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u251c\u2500\u2500 modelConstruct \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 Solver \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 AndroidCallbacks.txt \u2502 \u2514\u2500\u2500 SourcesAndSinks.txt \u251c\u2500\u2500 libs \u2502 \u2514\u2500\u2500 dependencies for Roma \u2514\u2500\u2500 VUIConflict.jar src: contains the source code of Roma libs: contains the dependencies of Roma config: configuration files required by FlowDroid. Here, SourcesAndSinks.txt define the functions of GUI & VUI sinks mentioned in the paper. VUIConflict.jar: the executable jar package of Roma Requirements Java 8 Microsoft z3 How to run Roma java -jar VUIConflict.jar -a <path to the Apk file> -p <path to the Android platform directory> -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o <path to the output directory> for example: java -jar VUIConflict.jar -a /home/xxx/Documents/dataset/com.voicenotebook.voicenotebook.apk -p /home/xxx/Android/Sdk/platforms -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o /home/xxx/Documents/output/ Result tested.txt: file names of apps that successfully start to build the entire call graph time.txt: file names and testing time (in seconds) apksWithoutRace(step1).txt: file names of apps without GV-cowrite apksWithoutRace(step2).txt: file names of apps without GV-race apksWithRace(step1).txt: file names of apps with GV-cowrite apksWithRace(step2).txt: file names of apps with GV-race Case Study See the detailed information here . Download Roma See the Roma directory for running Roma. Dataset The 810 apks' app ids are listed here. Outputs The outputs of Roma on 810 apks are saved in output directory.","title":"Home"},{"location":"#roma-gv-race-detector-on-mobile-apps","text":"Roma is a framework to automatically detect the GV-race on android apps. Roma extracts the GUI and VUI related call graph through static program analysis, and generates a GV interaction graph using our pre-defined highly abstract primitives to represent the GUI and VUI behavior of the app. It introduces happen-before constraints to formally specify the freeness of GV-race with respect to the GV interaction graph, so that the property can be reduced to constraint solving with off-the-shelf SMT solvers.","title":"Roma: GV-race detector on mobile apps"},{"location":"#files-tree","text":"\u251c\u2500\u2500 README.md \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 Main.java \u2502 \u251c\u2500\u2500 callGraphAnalyze \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u251c\u2500\u2500 modelConstruct \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 Solver \u2502 \u2514\u2500\u2500 ... \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 AndroidCallbacks.txt \u2502 \u2514\u2500\u2500 SourcesAndSinks.txt \u251c\u2500\u2500 libs \u2502 \u2514\u2500\u2500 dependencies for Roma \u2514\u2500\u2500 VUIConflict.jar src: contains the source code of Roma libs: contains the dependencies of Roma config: configuration files required by FlowDroid. Here, SourcesAndSinks.txt define the functions of GUI & VUI sinks mentioned in the paper. VUIConflict.jar: the executable jar package of Roma","title":"Files Tree"},{"location":"#requirements","text":"Java 8 Microsoft z3","title":"Requirements"},{"location":"#how-to-run-roma","text":"java -jar VUIConflict.jar -a <path to the Apk file> -p <path to the Android platform directory> -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o <path to the output directory> for example: java -jar VUIConflict.jar -a /home/xxx/Documents/dataset/com.voicenotebook.voicenotebook.apk -p /home/xxx/Android/Sdk/platforms -c config/AndroidCallbacks.txt -s config/SourcesAndSinks.txt -o /home/xxx/Documents/output/","title":"How to run Roma"},{"location":"#result","text":"tested.txt: file names of apps that successfully start to build the entire call graph time.txt: file names and testing time (in seconds) apksWithoutRace(step1).txt: file names of apps without GV-cowrite apksWithoutRace(step2).txt: file names of apps without GV-race apksWithRace(step1).txt: file names of apps with GV-cowrite apksWithRace(step2).txt: file names of apps with GV-race","title":"Result"},{"location":"#case-study","text":"See the detailed information here .","title":"Case Study"},{"location":"#download","text":"Roma See the Roma directory for running Roma. Dataset The 810 apks' app ids are listed here. Outputs The outputs of Roma on 810 apks are saved in output directory.","title":"Download"},{"location":"case/","text":"Case Study Some typical apps from the dataset are selected for the case study. Case 1 Case 1. Case 2 \u200b Case 2. Case 3 Case 3.","title":"Case Study"},{"location":"case/#case-study","text":"Some typical apps from the dataset are selected for the case study.","title":"Case Study"},{"location":"case/#case-1","text":"Case 1.","title":"Case 1"},{"location":"case/#case-2","text":"\u200b Case 2.","title":"Case 2"},{"location":"case/#case-3","text":"Case 3.","title":"Case 3"}]}